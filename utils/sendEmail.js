const nodemailer = require('nodemailer');
const { google } = require('googleapis');

// // These id's and secrets should come from .env file.
// const CLIENT_ID =
// 	'1020090370233-01i9ha3d4alss99mu4su588pj0sdrm3o.apps.googleusercontent.com';
// const CLIENT_SECRET = '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';
const REDIRECT_URI = 'https://developers.google.com/oauthplayground';
// const REFRESH_TOKEN =
// 	'1//04XMdtODE7_HwCgYIARAAGAQSNwF-L9Irc1AyD1X6afZNeZb2L8-9QUtrn4JiT7uJi6vadM8jYk4GZwak9eEOXdqWXGec11zvtUs';

exports.sendMail = async ({ config, content, packages }) => {
	const CLIENT_ID = config.client_Id;
	const CLIENT_SECRET = config.client_secret;
	const REFRESH_TOKEN = config.refresh_token;

	const oAuth2Client = new google.auth.OAuth2(
		CLIENT_ID,
		CLIENT_SECRET,
		REDIRECT_URI
	);
	oAuth2Client.setCredentials({ refresh_token: REFRESH_TOKEN });
	try {
		const accessToken = await oAuth2Client.getAccessToken();

		const transport = nodemailer.createTransport({
			service: 'gmail',
			auth: {
				type: 'OAuth2',
				user: config.sender_email,
				clientId: CLIENT_ID,
				clientSecret: CLIENT_SECRET,
				refreshToken: REFRESH_TOKEN,
				accessToken: accessToken
			}
		});

		const mailOptions = {
			from: `${config.sender_name} <${config.sender_email}>`,
			to: `${config.receiver_email_list}`,
			subject: content.subject,
			text: content.text,
			html: `
			<div style="margin:0px auto; max-width:900px; background:#ffffff;">			
				<table style="display: flex; justify-content: center; width: 100%;">
					<tr style="  background-color: #bcbcbc; padding-bottom: 2rem;">
						<td style="font-weight: bold; padding:1rem;text-align: left; width:30%;">Package Name</td>
						<td style="padding: 1rem;">Package Version</td>
						<td style="padding: 1rem;">Latest Version</td>
						<td style="padding: 1rem;">Update Status</td>
						<td style="padding: 1rem;">Suppported/Deprecated</td>
					</tr>
					${packages
						.map(
							package => `<tr style="background-color:${
								package.deprecated ? '#f00606' : '#f5f5f5'
							}; color: ${
								package.deprecated ? '#ffffff' : '#500050'
							};">
								<td style="font-weight: bold; padding:1rem;text-align: left; width:30%;">${
									package.name
								}</td>
								<td style="padding: 1rem;">${package.version}</td>
								<td style="padding: 1rem;">${package.latestVersion}</td>
								<td style="padding: 1rem; background-color:${
									package.updateStatus === 'Major Update'
										? '#fa9e9e'
										: package.updateStatus ===
										  'Minor Update'
										? '#ffe599'
										: package.updateStatus ===
										  'Patch Update'
										? '#fff2cc'
										: package.updateStatus ===
										  'Latest Version'
										? '#cffabc'
										: '#f00606'
								};">${package.updateStatus}</td>
								<td style="padding: 1rem;">${
									package.deprecated
										? 'Deprecated'
										: 'Supported'
								}</td>
							</tr>`
						)
						.join(' ')}
					<tr>
							<td style="word-break:break-word;font-size:0px;padding:30px 0px">
									<p style="font-size:1px;margin:0px auto;border-top:1px solid #dcddde;width:100%"></p>
							</td>
					</tr>
					<tr>
						<td style="word-break:break-word;font-size:0px;padding:0px" align="left">
							<div style="color:#747f8d;font-family:Whitney,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;font-size:13px;line-height:16px;text-align:left">
								<p>
									This email has been generated by <b>check-dep npm tool</b>                                                                            
								</p>
							</div>
						</td>
					</tr>
				</table>
			</div>`
		};

		const result = await transport.sendMail(mailOptions);
		return result;
	} catch (error) {
		return error;
	}
};

// sendMail()
// 	.then(result => console.log('Email sent...', result))
// 	.catch(error => console.log(error.message));
